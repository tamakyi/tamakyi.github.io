<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>阿里云 on 狼的公告板 ver.Hugo</title><link>https://blog.tama.guru/tags/%E9%98%BF%E9%87%8C%E4%BA%91.html</link><description>Recent content in 阿里云 on 狼的公告板 ver.Hugo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>tamakyi</copyright><lastBuildDate>Wed, 20 Aug 2025 01:51:51 +0000</lastBuildDate><atom:link href="https://blog.tama.guru/tags/%E9%98%BF%E9%87%8C%E4%BA%91/index.xml" rel="self" type="application/rss+xml"/><item><title>使用acme.sh申请通配ssl证书</title><link>https://blog.tama.guru/record/acme-sh_zerossl.html</link><pubDate>Mon, 20 May 2024 21:04:00 +0800</pubDate><guid>https://blog.tama.guru/record/acme-sh_zerossl.html</guid><description>&lt;p>从今年3-4月起，国内主流的域名平台都开始把原来一年期的免费证书调整成三个月（参见：&lt;a class="link" href="https://help.aliyun.com/zh/ssl-certificate/user-guide/upgrade-a-free-certificate-upgrade-a-free-certificate" target="_blank" rel="noopener"
>免费版SSL证书升级指南&lt;/a>），但是阿里另外给了个解决方案，单域名一年缴68元可以获得原来一样的一年证书。&lt;/p>
&lt;blockquote>
&lt;p>尊敬的阿里云用户：
接收到厂商关于免费证书服务收费策略调整的通知，我们将在2023年11月14号开始生效厂商策略。在策略生效后，免费证书规则如下：
对于免费领取的SSL证书，签发后的证书有效期统一变更为3个月。如果您希望继续使用12个月有效期的免费证书，则需收取相关服务费，费用为68元/张/年。&lt;/p>&lt;/blockquote>
&lt;p>对于我们这些白嫖用户来说这就非常难搞了，证书时间大幅缩短意味着一年要申请四次，而且如果域名很多的话每个还需要单独申请，想想都很酸爽&amp;hellip;但是花钱是不可能的，单个证书68对我们来说也是一笔不小的开销，对我们这种小站站长确实不值得。&lt;/p>
&lt;p>那么现在摆在我们面前的有两条路：
&lt;del>1.关站跑路&lt;/del>
2.想办法做自动化申请替换。&lt;/p>
&lt;p>比较常见的方法就是&lt;a class="link" href="https://github.com/acmesh-official/acme.sh" target="_blank" rel="noopener"
>acme.sh&lt;/a>，这是个可以申请签发、部署管理、ssl证书的脚本，操作起来也比较方便，甚至可以通过corntab之类的工具实现自动续期，算是当前状况下一个解决方案了。&lt;/p>
&lt;p>而证书提供商我推荐使用&lt;a class="link" href="https://zerossl.com" target="_blank" rel="noopener"
>zerossl&lt;/a>，最主要的是它能提供免费的范域名甚至是IP证书，虽然只有三个月，但是结合acme.sh就能实现自动续签，相当于无限续期。&lt;/p>
&lt;h3 id="正常操作流程">正常操作流程
&lt;/h3>&lt;p>首先肯定是先去zerossl申请一个账号，这个不多说了。
接下来安装acme.sh
如果服务器在国外的，直接使用官方的
curl &lt;a class="link" href="https://get.acme.sh" target="_blank" rel="noopener"
>https://get.acme.sh&lt;/a> | sh
即可，如果服务器在国内的，考虑到直连github可能会抽风，建议使用
curl &lt;a class="link" href="https://gitee.com/acmesh-offical/acme.sh/raw/master/acme.sh" target="_blank" rel="noopener"
>https://gitee.com/acmesh-offical/acme.sh/raw/master/acme.sh&lt;/a> | sh -s &lt;a class="link" href="mailto:email=your@zerosslaccount.com" >email=your@zerosslaccount.com&lt;/a>
其中&lt;code>your@zerosslaccount.com&lt;/code>换成自己申请zerossl账号用的邮箱。
然后使环境生效：
source ~/.bashrc
使用第一种方法会安装到&lt;code>~/.acme.sh/&lt;/code>下，不执行环境变量生效的可以手动在文件夹内执行脚本。
然后把zerossl配置为默认的ca服务：
acme.sh &amp;ndash;set-default-ca &amp;ndash;server zerossl
因为当前我使用的是DNSPOD的解析，需要先去&lt;a class="link" href="https://console.dnspod.cn/account/token/token" target="_blank" rel="noopener"
>DNSPOD Token&lt;/a>页面生成一组密钥，生成之后页面会生成一个ID和TOKEN，假设：
ID=XXXXXX
TOKEN=QWERTYUIOPASADFGHJKL
那么需要配置以下内容到环境变量：
export DP_Id=&amp;ldquo;XXXXXX&amp;rdquo;
export DP_Key=&amp;ldquo;QWERTYUIOPASADFGHJKL&amp;rdquo;
这里的DP指的是DNSPOD，如果使用的是其他服务商可以参考&lt;a class="link" href="https://github.com/acmesh-official/acme.sh/tree/master/dnsapi" target="_blank" rel="noopener"
>dnsapi文档&lt;/a>和&lt;a class="link" href="https://github.com/acmesh-official/acme.sh/wiki" target="_blank" rel="noopener"
>acme.sh wiki&lt;/a>。
然后配置zerossl的账号信息到acme.sh:
acme.sh &amp;ndash;register-account -m &lt;a class="link" href="mailto:your@zerosslaccount.com" >your@zerosslaccount.com&lt;/a> &amp;ndash;server zerossl
这里会生成一个&lt;code>ACCOUNT_THUMBPRINT&lt;/code>，一般用不到，可以忽略。
到此就可以进行证书申请操作了：
比如我要申请的证书域名是&lt;code>*.tama.guru&lt;/code>，那么需要执行：
acme.sh &amp;ndash;dns dns_dp &amp;ndash;issue -d *.tama.guru -d tama.guru
如果执行过程中报错可以执行：
acme.sh &amp;ndash;dns dns_dp &amp;ndash;issue -d *.tama.guru -d tama.guru &amp;ndash;debug
来检查是什么步骤报错。
如果没有任何错误，目录结构应该如下：&lt;/p>
&lt;pre>&lt;code>-********- 8 root root 187 May 20 17:17 .
-********- 24 root root 4096 May 20 20:28 ..
-********- 1 root root 433 May 20 16:56 account.conf
-********- 1 root root 223427 May 20 16:29 acme.sh
-********- 1 root root 78 May 20 16:29 acme.sh.env
-********- 3 root root 30 May 20 16:48 ca
-********- 2 root root 4096 May 20 16:29 deploy
-********- 2 root root 8192 May 20 16:29 dnsapi
-********- 1 root root 221 May 20 17:17 fetch.sh
-********- 1 root root 393 May 20 16:56 http.header
-********- 2 root root 4096 May 20 16:29 notify
-********- 2 root root 162 May 20 16:56 '*.tama.guru_ecc'
&lt;/code>&lt;/pre>
&lt;p>我们的证书就保存在&lt;code>'*.tama.guru_ecc'&lt;/code>内，配置&lt;code>*.tama.guru.key&lt;/code>和&lt;code>fullchain.cer&lt;/code>到nginx/apache上即可。&lt;/p>
&lt;h3 id="自动化">自动化
&lt;/h3>&lt;p>根据上面的步骤基本上就知道自动化脚本怎么写了:
# nano /root/.acme.sh/autocert.sh&lt;/p>
&lt;pre>&lt;code>#!/bin/bash
cd /root/.acme.sh #根据acme安装路径选择
export DP_Id=&amp;quot;XXXXXX&amp;quot;
export DP_Key=&amp;quot;QWERTYUIOPASADFGHJKL&amp;quot;
#./acme.sh --register-account -m your@zerosslaccount.com --server zerossl
./acme.sh --dns dns_dp --issue -d *.tama.guru -d tama.guru
&lt;/code>&lt;/pre>
&lt;p>然后添加到crontab:
0 23 1 * * sh nano /root/.acme.sh/autocert.sh #每月1号的23点执行以上脚本
如果acme.sh所在机器就是网站服务器，可以参照&lt;a class="link" href="https://www.rmedgar.com/blog/using-acme-sh-with-nginx/" target="_blank" rel="noopener"
>Using acme.sh with nginx&lt;/a>把应用证书的工作也交给服务器自动完成，更简单的方法就是先指定输出文件位置然后直接在nginx的配置文件里面修改:
#导出文件
acme.sh &amp;ndash;install-cert -d tama.guru &amp;ndash;key-file /path/to/keyfile/tama.guru.pem &amp;ndash;fullchain-file /path/to/fullchain/tama.guru.cer &amp;ndash;reloadcmd &amp;ldquo;service nginx force-reload&amp;rdquo;
#修改nginx配置文件
ssl_certificate /path/to/fullchain/tama.guru.cer;
ssl_certificate_key /path/to/keyfile/tama.guru.pem;&lt;/p>
&lt;h3 id="其他">其他
&lt;/h3>&lt;p>Q：我不想敲一堆命令，有更直观的方法吗？
A：可以使用开源工具&lt;a class="link" href="https://github.com/certd/certd" target="_blank" rel="noopener"
>certd&lt;/a>，该工具提供了一个网页前端供用户配置自动化流水线申请证书。
Q：那你为什么不用？
A：它只支持Let&amp;rsquo;s encrypt证书。&lt;/p></description></item><item><title>阿里云服务器的买后优化记录</title><link>https://blog.tama.guru/record/aliyun_server.html</link><pubDate>Sun, 16 Oct 2022 00:15:00 +0800</pubDate><guid>https://blog.tama.guru/record/aliyun_server.html</guid><description>&lt;p>腾讯云香港服务器蹲了半年都蹲不出台正常点的，中低端经常售罄，至少都要2C2T+4G起步，一个月就要六七十，这谁受得了？？？月初打开阿里云一看，哟嚯，2C（其实是1C2T）+2G一个月才30，试用下访问速度基本上接近国内服务器，这我直呼受不了，赶紧把之前那破腾讯云上的数据迁移咯。使用体验基本复合我的预期，但是2G跑个debian在加几个网站基本就没用想别的了，内存这块有优化的必要。&lt;/p>
&lt;hr>
&lt;p>[scode type=&amp;ldquo;lblue&amp;rdquo;]No.1 mysql[/scode]&lt;/p>
&lt;p>对于小内存的机子来说mysql跑一段时间之后内存占用会高得恐怖。我中午刚新开的服务器，到晚上11点多用&lt;code>htop&lt;/code>一看，单mysqld这个进程已经吃了18.5%的内存，也就是差不多400M，你也是真的能吃 ::acfun:01:: 。查了些资料然后进行比对，发现镜像原本的配置也已经优化的差不多了，但是我们还需要打开&lt;code>my.cnf&lt;/code>，在&lt;code>[mysqld]&lt;/code>字段添加&lt;/p>
&lt;p>&lt;code>performance_schema = off&lt;/code>&lt;/p>
&lt;p>然后保存重启mysql进程，也是有一定效果。&lt;/p>
&lt;p>[scode type=&amp;ldquo;lblue&amp;rdquo;]No.2 AliyunDun（阿里云盾）[/scode]&lt;/p>
&lt;p>这玩意是预装在系统里的，平时啥也不干也会吃掉5到6个点的内存，在官方的介绍页上，对这个产品的表述是：&lt;/p>
&lt;blockquote>
&lt;p>云盾是阿里巴巴集团多年来安全技术研究积累的成果，结合阿里云云计算平台强大的数据分析能力。为中小网站提供如安全漏洞检测、网页木马检测以及面向云服务器用户提供的主机入侵检测、防DDOS等一站式安全服务。&lt;/p>&lt;/blockquote>
&lt;p>其实平时不乱开端口，不乱往主机上塞文件问题就不大，至于DDoS，真要打我这小破站你这盾也不够用啊。。。&lt;/p>
&lt;p>以下是卸载步骤：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget http://update.aegis.aliyun.com/download/uninstall.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sh uninstall.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget http://update.aegis.aliyun.com/download/quartz_uninstall.sh sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">quartz_uninstall.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pkill aliyun-service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -fr /etc/init.d/agentwatch /usr/sbin/aliyun-service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -rf /usr/local/aegis*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>未完待续 ::acfun:2003::&lt;/p></description></item></channel></rss>