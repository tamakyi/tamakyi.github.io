<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>实用工具 on 狼的公告板 ver.Hugo</title>
        <link>https://blog.tama.guru/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7.html</link>
        <description>Recent content in 实用工具 on 狼的公告板 ver.Hugo</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>tamakyi</copyright>
        <lastBuildDate>Fri, 01 Aug 2025 16:15:45 +0000</lastBuildDate><atom:link href="https://blog.tama.guru/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>[软件推荐]Windows下grep命令的替代品</title>
        <link>https://blog.tama.guru/software/grep-on-windows.html</link>
        <pubDate>Wed, 11 Sep 2024 21:51:00 +0800</pubDate>
        
        <guid>https://blog.tama.guru/software/grep-on-windows.html</guid>
        <description>&lt;p&gt;grep 命令全名 &lt;strong&gt;global regular expression print&lt;/strong&gt;（全局正则表达式打印），可以搜索一个或多个（输入）文件，以查找与「给定模式」相匹配的行，并将每个匹配行写入标准输出，这在Linux下是一个非常常用的命令。无论是筛选文件还是命令输出，基本上都是一个grep搞定。&lt;/p&gt;
&lt;p&gt;但是Windows下就没有这么好用的东西（至少自带程序里面没有），只能通过装第三方软件实现，以下推荐几个我在使用的替代品：&lt;/p&gt;
&lt;h4 id=&#34;gnu-grep&#34;&gt;GNU Grep
&lt;/h4&gt;&lt;h5 id=&#34;官网&#34;&gt;官网
&lt;/h5&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gnuwin32.sourceforge.net/packages/grep.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Grep Windows 版 (sourceforge.net)&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;使用方法&#34;&gt;使用方法
&lt;/h5&gt;&lt;p&gt;到官网&lt;a class=&#34;link&#34; href=&#34;http://downloads.sourceforge.net/gnuwin32/grep-2.5.4-setup.exe&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载&lt;/a&gt;文件后安装，需要配置环境变量引导到Grep安装目录，然后即可在cmd或powershell中使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep --help
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Usage: grep &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;OPTION&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;... PATTERN &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;FILE&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Search &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; PATTERN in each FILE or standard input.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PATTERN is, by default, a basic regular expression &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;BRE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Example: grep -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt; menu.h main.c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Regexp selection and interpretation:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -E, --extended-regexp     PATTERN is an extended regular expression &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ERE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -F, --fixed-strings       PATTERN is a &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; of newline-separated fixed strings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -G, --basic-regexp        PATTERN is a basic regular expression &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;BRE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -P, --perl-regexp         PATTERN is a Perl regular expression
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -e, --regexp&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PATTERN      use PATTERN &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; matching
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -f, --file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;FILE           obtain PATTERN from FILE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -i, --ignore-case         ignore &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; distinctions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -w, --word-regexp         force PATTERN to match only whole words
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -x, --line-regexp         force PATTERN to match only whole lines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -z, --null-data           a data line ends in &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; byte, not newline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Miscellaneous:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -s, --no-messages         suppress error messages
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -v, --invert-match        &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; non-matching lines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -V, --version             print version information and &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --help                display this &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; and &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --mmap                use memory-mapped input &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; possible
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Output control:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -m, --max-count&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NUM       stop after NUM matches
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -b, --byte-offset         print the byte offset with output lines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -n, --line-number         print line number with output lines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --line-buffered       flush output on every line
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -H, --with-filename       print the filename &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; each match
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --no-filename         suppress the prefixing filename on output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --label&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;LABEL         print LABEL as filename &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; standard input
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -o, --only-matching       show only the part of a line matching PATTERN
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -q, --quiet, --silent     suppress all normal output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --binary-files&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;TYPE   assume that binary files are TYPE&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            TYPE is &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;binary&lt;span class=&#34;s1&#34;&gt;&amp;#39;, `text&amp;#39;&lt;/span&gt;, or &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;without-match&lt;span class=&#34;s1&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  -a, --text                equivalent to --binary-files=text
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  -I                        equivalent to --binary-files=without-match
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  -d, --directories=ACTION  how to handle directories;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;                            ACTION is `read&amp;#39;&lt;/span&gt;, &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;recurse&lt;span class=&#34;s1&#34;&gt;&amp;#39;, or `skip&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -D, --devices&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ACTION      how to handle devices, FIFOs and sockets&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            ACTION is &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;read&lt;span class=&#34;s1&#34;&gt;&amp;#39; or `skip&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -R, -r, --recursive       equivalent to --directories&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;recurse
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --include&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;FILE_PATTERN  search only files that match FILE_PATTERN
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --exclude&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;FILE_PATTERN  skip files and directories matching FILE_PATTERN
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --exclude-from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;FILE   skip files matching any file pattern from FILE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --exclude-dir&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PATTERN directories that match PATTERN will be skipped.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -L, --files-without-match print only names of FILEs containing no match
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -l, --files-with-matches  print only names of FILEs containing matches
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -c, --count               print only a count of matching lines per FILE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -T, --initial-tab         make tabs line up &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; needed&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -Z, --null                print &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; byte after FILE name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Context control:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -B, --before-context&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NUM  print NUM lines of leading context
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -A, --after-context&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NUM   print NUM lines of trailing context
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -C, --context&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NUM         print NUM lines of output context
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -NUM                      same as --context&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NUM
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --color&lt;span class=&#34;o&#34;&gt;[=&lt;/span&gt;WHEN&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --colour&lt;span class=&#34;o&#34;&gt;[=&lt;/span&gt;WHEN&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;       use markers to highlight the matching strings&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            WHEN is &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;always&lt;span class=&#34;s1&#34;&gt;&amp;#39;, `never&amp;#39;&lt;/span&gt;, or &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;auto&lt;span class=&#34;s1&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  -U, --binary              do not strip CR characters at EOL (MSDOS)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;`egrep&amp;#39;&lt;/span&gt; means &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;grep -E&lt;span class=&#34;s1&#34;&gt;&amp;#39;.  `fgrep&amp;#39;&lt;/span&gt; means &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;grep -F&lt;span class=&#34;s1&#34;&gt;&amp;#39;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Direct invocation as either `egrep&amp;#39;&lt;/span&gt; or &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;fgrep&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; is deprecated.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;With no FILE, or when FILE is -, &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; standard input.  If less than two FILEs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;are given, assume -h.  Exit status is &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; any line was selected, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; otherwise&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; any error occurs and -q was not given, the &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; status is 2.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Report bugs to: bug-grep@gnu.org
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GNU Grep home page: &amp;lt;http://www.gnu.org/software/grep/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;General &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; using GNU software: &amp;lt;http://www.gnu.org/gethelp/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;netstat -a &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep localhost &lt;span class=&#34;c1&#34;&gt;#通管筛选命令执行结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  TCP    127.0.0.1:5354         localhost:49718        ESTABLISHED
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  TCP    127.0.0.1:5354         localhost:49722        ESTABLISHED
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep -rin question * &lt;span class=&#34;c1&#34;&gt;#遍历目录查询关键词位置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cmd/nekobox.go:19:      app.Description &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Anonymous question box&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;internal/cmd/censor.go:19:      Usage:  &lt;span class=&#34;s2&#34;&gt;&amp;#34;Censor the questions&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;internal/cmd/censor.go:37:      // Check all the unprocessed questions.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;优点&#34;&gt;优点
&lt;/h5&gt;&lt;p&gt;使用方法基本和Linux下一致&lt;/p&gt;
&lt;h5 id=&#34;缺点&#34;&gt;缺点
&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;需要配置环境变量位置才能使用&lt;/li&gt;
&lt;li&gt;最后一次更新已经是2009年了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;dngrep&#34;&gt;dnGrep
&lt;/h4&gt;&lt;p&gt;官网：&lt;a class=&#34;link&#34; href=&#34;https://dngrep.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;dnGrep – 适用于 Windows 的强大搜索功能&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一个GUI化的grep，能够实现使用文本、正则表达式、XPath等查询搜索文本文件、Word 和 Excel 文档、PDF 和存档。dnGrep 包括搜索和替换、整个文件预览、文件资源管理器中的右键单击搜索等等。&lt;/p&gt;
&lt;p&gt;使用方法：到&lt;a class=&#34;link&#34; href=&#34;https://github.com/dnGrep/dnGrep/releases/latest&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github项目页面&lt;/a&gt;下载对应版本的安装包安装即可，项目自带中文，安装完成后可以到设置里面配置。使用方法也很简单，无非就是选择查找范围，选择搜索方式和搜索条件，搜索结果会高亮展现：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-tama-guru.oss-cn-hongkong.aliyuncs.com/2024/09/11/66e1a05b4dd4f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dngrep&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;优点-1&#34;&gt;优点
&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;图形化操作，更直观&lt;/li&gt;
&lt;li&gt;搜索方式多样化&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;缺点-1&#34;&gt;缺点
&lt;/h5&gt;&lt;p&gt;能搜文件，但只能搜文件。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;对原生爱好者不友好。&lt;/del&gt;&lt;/p&gt;
&lt;h4 id=&#34;git-scm&#34;&gt;Git-scm
&lt;/h4&gt;&lt;p&gt;其实这玩意就是个mingw64工具集，本来是用于git的，但是我看到他带bash和grep，安装使用也方便，就一直用了。&lt;/p&gt;
&lt;h5 id=&#34;官网-1&#34;&gt;官网
&lt;/h5&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/downloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git - Downloads (git-scm.com)&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;使用方法-1&#34;&gt;使用方法
&lt;/h5&gt;&lt;p&gt;下载安装对应版本即可，也提供了便携版(PortableGit)，解压即用。安装之后右键菜单会多出一个&lt;code&gt;git bash&lt;/code&gt;，在指定目录下点开会进入一个bash终端，在这里就直接能执行grep了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-tama-guru.oss-cn-hongkong.aliyuncs.com/2024/09/11/66e1a0404ca95.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;git-scm&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;除了grep外，附带的其他命令可以在&lt;code&gt;usr/bin/&lt;/code&gt;下看到。&lt;/p&gt;
&lt;h5 id=&#34;优点-2&#34;&gt;优点
&lt;/h5&gt;&lt;p&gt;最真实的linux终端体验&lt;/p&gt;
&lt;h5 id=&#34;缺点-2&#34;&gt;缺点
&lt;/h5&gt;&lt;p&gt;&lt;del&gt;如果只为了用grep的话有点为了这碗醋包饺子的感觉。&lt;/del&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
