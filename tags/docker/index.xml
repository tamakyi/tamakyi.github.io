<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on 狼的公告板 ver.Hugo</title><link>https://blog.tama.guru/tags/docker.html</link><description>Recent content in Docker on 狼的公告板 ver.Hugo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>tamakyi</copyright><lastBuildDate>Tue, 14 Oct 2025 04:18:09 +0000</lastBuildDate><atom:link href="https://blog.tama.guru/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Alpine linux在爱快中作为虚拟机运行Docker</title><link>https://blog.tama.guru/record/alpine_docker_on_ikuai.html</link><pubDate>Tue, 09 Sep 2025 15:09:11 +0800</pubDate><guid>https://blog.tama.guru/record/alpine_docker_on_ikuai.html</guid><description>&lt;img src="https://images.337845818.best/20250806/6b0378c33ae92cb2cc02a8a7bce5a2fa.webp" alt="Featured image of post 使用Alpine linux在爱快中作为虚拟机运行Docker" />&lt;p>[TOC]&lt;/p>
&lt;h4 id="前言">前言
&lt;/h4>&lt;p>  自从爱快添加Docker插件之后我有第一时间就安装，使用一段时间后感觉这玩意问题蛮多的，首先就是功能残废，系统提供的界面只能实现修改镜像源、配置存储位置这些基础功能（修改镜像源还是最近几个版本才添加，原来直连官方国内已经无法访问）；然后就是访问异常，我使用Chromium内核的浏览器（包括但不限于Chrome、Edge）访问Docker的管理页面，总是会莫名其妙的跳出来，每点一下就跳一次，拉个镜像配置完参数硬是要花我几分钟时间。而且Docker功能需要到云服务端去手动开启，一直搞不懂为什么要这样。&lt;br>
  但是现在多个路子，就是通过自带的虚拟机虚拟linux环境专门来跑docker，听说它自带的虚拟机也有一些问题，长期使用会影响到宿主系统的性能，但是我使用一段时间之后并没有感觉，日常使用占用CPU最多也就跑到40%，内存我限制了1G，感觉基本够用了。
  我使用的是某鱼上购入的双网口j1900+4G+32G MSata主板作为旁路由，原来用的是基于openwrt的istore，功能很全面，使用起来也很简单，日常维护甚至不需要进ssh，但是我监控家中的网络时发现这个软路由总是莫名其妙的掉线，好在下级做过故障转移，旁路由挂的时候AP能够直接过光猫，不然家里老人断网了我都不知道怎么和他们解释。&lt;br>
  之所以用Alpine是因为它有专门针对虚拟机的版本，体积仅有65M，安装完占用硬盘不到300M，但是能全功能安装Docker甚至其他软件，对于j1900+4G这种配置再合适不过了。&lt;/p>
&lt;h4 id="准备工作">准备工作
&lt;/h4>&lt;h5 id="分区">分区
&lt;/h5>&lt;p>  &lt;strong>建议先对爱快分区内的文件备份，因为需要单独给Alpine配置一个分区。&lt;/strong>
&lt;img src="https://images.337845818.best/20250909/24e29e18086aec5ed47a7b556c3d1d00.webp" alt="image" />
  因为硬盘只有32G，我打算分成三块，4G给系统日志绰绰有余，12G分配做普通存储，用自带的Docker还有存放一些文件的时候使用，剩下的全部都留作Alpine的分区。注意的是Alpine的分区不需要绑定业务，也无需挂载，格式化好之后放着就行。&lt;/p>
&lt;h5 id="上传镜像">上传镜像
&lt;/h5>&lt;p>  刚才我们分配做普通存储的分区下新建一个文件夹ISO，然后到https://www.alpinelinux.org/downloads/找到Virtual下的x86_64（如果是arm系统就下载arm/aarch），下载针对虚拟机的最新版本ISO，目前最新的是：https://dl-cdn.alpinelinux.org/alpine/v3.22/releases/x86_64/alpine-virt-3.22.1-x86_64.iso存放到ISO文件夹，或者不限难看直接放在根目录也行。
&lt;img src="https://images.337845818.best/20250909/b02c4936ba10bc89580509147ced1b26.png" alt="image" />&lt;br>
&lt;img src="https://images.337845818.best/20250909/55c9379571902c138c6999b5f74770c1.webp" alt="image" />
  找到文件后点击查看路径并复制路径备用。&lt;/p>
&lt;h4 id="新增虚拟机">新增虚拟机
&lt;/h4>&lt;h5 id="配置虚拟机">配置虚拟机
&lt;/h5>&lt;p>  在高级应用-虚拟机下选择添加。
&lt;img src="https://images.337845818.best/20250909/de7110d9c3da17a3fc3926ded449caa2.png" alt="image" />
  配置方面根据自己的实际情况添加即可，虚拟机名称任意天蝎，系统类型选Linux，CPU使用率我只给80%，核心数给2，内存分配1024M。
&lt;img src="https://images.337845818.best/20250909/9bf9b8e560fc1bff3574ddb9ec5d5c61.png" alt="image" />
  设备管理需要手工添加一个分区，设备类型为磁盘，磁盘类型选引用分区，勾选半虚拟化，分区名称选择前面我们分区时没格式化的那个，我这里显示的是sda7。
&lt;img src="https://images.337845818.best/20250909/dbe4e032b6f92242beb2ab24ac18c362.png" alt="image" />
  下面虚拟机光驱就填写前面我们的ISO文件路径，VNC外部访问一定要打开，密码和端口任意，下面的开机自启、UEFI启动和硬件加速也打开，然后保存。
&lt;img src="https://images.337845818.best/20250909/ee42a0298af19eac928e89e946144893.webp" alt="webp-virtual-2" />&lt;/p>
&lt;h5 id="安装alpine">安装Alpine
&lt;/h5>&lt;p>  启动虚拟机，返回上一层的操作部分点击VNC，输入之前配置的密码，进入到系统安装界面。
&lt;img src="https://images.337845818.best/20250909/1ae4dc97b71036f4fa51d9d00683e534.png" alt="8f0b0496-59b7-469f-843f-730d4fa95a16" />
  默认的用户名是&lt;code>root&lt;/code>，没有密码直接回车。
  然后按提示进行配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost:~# setup-alpine &lt;span class="c1">#执行安装脚本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Select keyboard layout:&lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span> us &lt;span class="c1">#选择键盘布局，选us即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Select variant &lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;abort&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>: us-intl &lt;span class="c1">#选择布局变种，我是随便选的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter system hostname &lt;span class="o">(&lt;/span>fully qualified from, e.g. &lt;span class="s1">&amp;#39;foo.example.org&amp;#39;&lt;/span>&lt;span class="o">)[&lt;/span>localhost&lt;span class="o">]&lt;/span> &lt;span class="c1">#系统名，一般直接保持localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Which one &lt;span class="k">do&lt;/span> you want to initialize? &lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;?&amp;#39;&lt;/span> or &lt;span class="s1">&amp;#39;done&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>eth0&lt;span class="o">]&lt;/span> &lt;span class="c1">#选择网卡，一般默认eth0即可，如果有另外添加网卡或其他特殊情况再调整&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Ip address &lt;span class="k">for&lt;/span> eth0?&lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;dhcp&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;?&amp;#39;&lt;/span>&lt;span class="o">)[&lt;/span>dhcp&lt;span class="o">]&lt;/span>192.168.233.233 &lt;span class="c1">#获取eth0网卡IP的方式，默认dhcp，但是我爱快没开dhcp，配置的静态路由，所以我填写爱快网段内任意一个没占用的IP。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Do you want to &lt;span class="k">do&lt;/span> any manual network configuration?&lt;span class="o">(&lt;/span>y/n&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>n&lt;span class="o">]&lt;/span> &lt;span class="c1">#是否需要手动设置网络，y则进入vi界面编辑网络配置文件，如无需要直接n&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">New Password: &lt;span class="c1">#设置root用户的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Retype password: &lt;span class="c1">#再输入一次&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Which timezone are you in? &lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;?&amp;#39;&lt;/span> or &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>UTC&lt;span class="o">]&lt;/span> Asia &lt;span class="c1">#选择时区&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">What sub-timezone of &lt;span class="s1">&amp;#39;Asia&amp;#39;&lt;/span> are you in? &lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;?&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> Shanghai &lt;span class="c1">#选择子时区&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/FTP proxy URL? &lt;span class="o">(&lt;/span>e.g. &lt;span class="s1">&amp;#39;http://proxy:8080&amp;#39;&lt;/span>, or &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span> &lt;span class="c1">#是否需要代理访问网络&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Which NTP client to run? &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;busybox&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;openntpd&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;chrony&amp;#39;&lt;/span> or &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>busybox&lt;span class="o">]&lt;/span> &lt;span class="c1">#用哪个作为ntp终端，默认即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter mirror number or URL: &lt;span class="o">[&lt;/span>1&lt;span class="o">]&lt;/span> f &lt;span class="c1">#选择软件源，最好选择第一项，即f，会遍历所有镜像留下最快的那个&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Setup a user? &lt;span class="o">(&lt;/span>enter a lower-case loginname, or &lt;span class="s1">&amp;#39;no&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>no&lt;span class="o">]&lt;/span> alpine &lt;span class="c1">#是否新建各一般用户，是则输入用户名，否则no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Full name &lt;span class="k">for&lt;/span> user alpine &lt;span class="o">[&lt;/span>alpine&lt;span class="o">]&lt;/span> &lt;span class="c1">#新用户的全名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">New Password: &lt;span class="c1">#设置root用户的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Retype password: &lt;span class="c1">#再输入一次&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter ssh key or URL &lt;span class="k">for&lt;/span> alpine &lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span> &lt;span class="c1">#输入新用户的ssh key，直接回车给它自己处理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Which ssh server?&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;openssh&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;dropbear&amp;#39;&lt;/span> or &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>openssh&lt;span class="o">]&lt;/span> &lt;span class="c1">#选择默认的ssh服务，一般都是用openssh，直接回车&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Which disk&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> you like to use &lt;span class="o">(&lt;/span>or &lt;span class="s1">&amp;#39;?&amp;#39;&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nb">help&lt;/span> or &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span> vda2 &lt;span class="c1">#要安装在哪个硬盘。如果前面没有手工把sda7分区添加进来这里则是空的，我这边系统中显示这个分区是vda2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">How would you like to use it? &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;sys&amp;#39;&amp;#39;, &amp;#39;&lt;/span>data&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>lvm&lt;span class="s1">&amp;#39; or &amp;#39;&lt;/span>?&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nb">help&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>?&lt;span class="o">]&lt;/span> sys &lt;span class="c1">#要怎么使用这个硬盘，一般选sys即可，所有文件都放在这个分区上，如果挂了多个分区可以分别配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: Erase the above disk&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> and &lt;span class="k">continue&lt;/span>? &lt;span class="o">[&lt;/span>y/N&lt;span class="o">]&lt;/span>: y &lt;span class="c1">#是否要格式化硬盘&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Installation is complete. Please reboot. reboot &lt;span class="c1">#是否重启&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="配置必要环境和docker">配置必要环境和Docker
&lt;/h5>&lt;p>  重启后可以直接用ssh连接alpine了，不需要再使用VNC。首先把软件包升级，Aplnes的安装器是apk，有点抽象。
  先执行&lt;code>su -&lt;/code>和&lt;code>apk update&lt;/code>拉取索引，然后用&lt;code>apk add sudo&lt;/code>安装sudo包，如果提示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost:~# apk add sudo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: unable to &lt;span class="k">select&lt;/span> packages:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo &lt;span class="o">(&lt;/span>no such package&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> required by: world&lt;span class="o">[&lt;/span>sudo&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>  可能是dns的问题，需要手动调整dns：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost:~# vi /etc/resolv.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nameserver 223.5.5.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>  然后再重新安装sudo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost:~# apk add sudo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:~# vi /etc/sudoers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="nv">ALL&lt;/span>&lt;span class="o">=(&lt;/span>ALL:ALL&lt;span class="o">)&lt;/span> ALL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">alpine &lt;span class="nv">ALL&lt;/span>&lt;span class="o">=(&lt;/span>ALL:ALL&lt;span class="o">)&lt;/span> ALL &lt;span class="c1">#添加这行到上面那行下面，alpine换成实际用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>  接下来安装Docker：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost:~# apk add docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:~# rc-update add docker boot &lt;span class="c1">#添加docker到开机自启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:~# service docker start &lt;span class="c1">#启动docker服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:~# docker -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Docker version 28.3.3, build 980b85681696fbd95927fd8ded8f6d91bdca95b0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>  还可以给自己新增的一般用户增加docker权限：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost:~# apk add shadow &lt;span class="c1">#因为alpine默认没有usermod，需要手动安装&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:~# usermod -aG docker alpine &lt;span class="c1">#alpine换成实际用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:~# newgrp docker &lt;span class="c1">#重新登录用户，也可以直接注销会话再登录&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>在docker里运行火狐浏览器</title><link>https://blog.tama.guru/record/firefox-on-docker.html</link><pubDate>Fri, 26 Apr 2024 15:53:00 +0800</pubDate><guid>https://blog.tama.guru/record/firefox-on-docker.html</guid><description>&lt;p>有时候我会需要在远程计算机上使用浏览器进行一些操作，但是存在一些问题。一是远程计算机本身空间容量/配置较低，预装的是core系统，因为使用个浏览器去安装整个桌面环境有点浪费了，也不利于系统稳定；二是软件可能会破坏原有的依赖，轻则软件报错，重则无法启动，这个就很难绷了。
好在docker能实现把远程的浏览器套到本地浏览器运行，看样子是一个webvnc，但是只能打开浏览器。项目是&lt;code>https://github.com/jlesage/firefox&lt;/code>，方法也很简单，直接执行：&lt;/p>
&lt;pre>&lt;code>docker run -d \
--name=firefox \
-p 5800:5800 \
-v /home/tamakyi/firefox/config:/config:rw \
jlesage/firefox
&lt;/code>&lt;/pre>
&lt;p>然后到ip:5800端口就能打开远端的火狐浏览器了。但是这样仅能保证运行，会发现中文字体全部都变成方块了，因此需要调整成：&lt;/p>
&lt;pre>&lt;code>docker run -d \
--name=firefox \
-p 5800:5800 \
-v /home/tamakyi/firefox/config:/config:rw \
-e TZ=Asia/Hong_Kong \
-e KEEP_APP_RUNNING=1 \
-e ENABLE_CJK_FONT=1 \
jlesage/firefox
&lt;/code>&lt;/pre>
&lt;p>其中&lt;code>/home/tamakyi/firefox/config&lt;/code>为宿主机的配置文件目录，需要自行修改，&lt;code>KEEP_APP_RUNNING=1&lt;/code>标明关掉本地浏览器页面保持远端浏览器运行，&lt;code>ENABLE_CJK_FONT=1&lt;/code>标明开启中文字体支持。
到这里其实已经能够正常运行了，完整的配置可以参考:&lt;/p>
&lt;pre>&lt;code>docker run -d \
--name=firefox \
-p 5800:5800 \
-v /home/tamakyi/firefox/config:/config:rw \
-e TZ=Asia/Hong_Kong \
-e KEEP_APP_RUNNING=1 \
-e ENABLE_CJK_FONT=1 \
-e DISPLAY_WIDTH=1920 \
-e DISPLAY_HEIGHT=1080 \
-e SECURE_CONNECTION=1 \
--shm-size 2g \
jlesage/firefox
&lt;/code>&lt;/pre>
&lt;p>其他可选性包括：
&lt;code>DISPLAY_WIDTH&lt;/code>和&lt;code>DISPLAY_HEIGHT&lt;/code>：生成浏览器的分辨率，如果配置不高的机器建议不要太高。
&lt;code>SECURE_CONNECTION&lt;/code>：开启https
&lt;code>shm-size&lt;/code>：配置容器内存使用上限。
执行之后并不会像项目下的源码下能直接访问，会报错，原因可以通过查询docker的运行日志找到：&lt;/p>
&lt;pre>&lt;code>[init ] container is starting...
[cont-env ] loading container environment variables...
...
[cont-init ] 15-cjk-font.sh: installing CJK font...
[cont-init ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/edge/community/aarch64/APKINDEX.tar.gz
[cont-init ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/aarch64/APKINDEX.tar.gz
[cont-init ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/aarch64/APKINDEX.tar.gz
[cont-init ] 15-cjk-font.sh: (1/1) Installing font-wqy-zenhei (0.9.45-r3)
...
╭――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╮
│ │
│ Application: Firefox │
│ Application Version: 124.0.1-r0 │
│ Docker Image Version: 24.04.1 │
│ Docker Image Platform: linux/arm64 │
│ │
╰――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╯
...
[app ] Mozilla Firefox 124.0.1
[supervisor ] all services started.
&lt;/code>&lt;/pre>
&lt;p>一般会在&lt;code>15-cjk-font.sh&lt;/code>这个步骤停留一段时间，需要下载挺多的数据，具体与网络有关。等到提示&lt;code>all services started&lt;/code>此时才能正常访问。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：如果你部署在公网服务器上，此时是可以直接通过ip+端口的方式访问的，及其不安全，且默认iptables防火墙无法配置该端口的访问权限&amp;hellip;（网上说的方法都试过了，没用）。因此，我建议再套一层firewall-cmd：&lt;/p>
&lt;pre>&lt;code>apt install firewalld
&lt;/code>&lt;/pre>
&lt;p>安装完记得配置常用端口的开启：&lt;/p>
&lt;pre>&lt;code>firewall-cmd --zone=public --add-port=YOUR_PORT/tcp --permanent
firewall-cmd --reload
&lt;/code>&lt;/pre>
&lt;p>这样虽然麻烦了点，但是安全性显著提高了。但是有一个问题，就是docker容器&lt;strong>无法联网&lt;/strong>了，估计是什么地方冲突，后面再检查。
最后还是&lt;strong>即开即用，用完就关&lt;/strong>。&lt;/p></description></item><item><title>在debian安装配置redroid并安装shamrock的记录</title><link>https://blog.tama.guru/record/redroid.html</link><pubDate>Wed, 24 Jan 2024 12:01:00 +0800</pubDate><guid>https://blog.tama.guru/record/redroid.html</guid><description>&lt;h3 id="前言">前言
&lt;/h3>&lt;p>由于某讯对第三方QQ机器人的大力追杀，原有的机器人框架（miraiqq和go-cqhttp）等基本上都无法使用了，登录会直接代码45封号。在此之后发展出shamrock等项目，此类项目的特点是需要虚拟机或实机进行操作，意味着至少需要一个桌面环境或者一台闲置手机，开销相比之前1c512m都能跑的时候高太多。在网上冲浪的时候发现了可以将安卓的Dalvik/ART移植到Linux桌面环境，借此运行安卓APK程序，因此需要用到redroid这个软件。&lt;/p>
&lt;p>redroid即Remote anDroid，是一个架设云手机的方案，可以透过docker在linux系统上跑安卓系统容器。相比于虚拟机方案，其优势在于：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>开源&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持GPU加速+arm转X86转译器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>与宿主机公用内核等相关资源&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持使用scrcpy进行连接&lt;/p>
&lt;hr>
&lt;/li>
&lt;/ul>
&lt;h3 id="给内核添加相关模块">给内核添加相关模块
&lt;/h3>&lt;p>首先需要查询系统内核是否支持&lt;code>binder&lt;/code>和&lt;code>ashmem&lt;/code>两个功能，此功能为使用redroid必须的。查询可以通过执行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">lsmod &lt;span class="p">|&lt;/span> grep -e ashmem_linux -e binder_linux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>进行查询，如果有输出可以略过此步骤。如果没有任何输出则表示内核没有配置好这两个模块，需要重新编译内核。对于Ubuntu系统，官方提供了&lt;a class="link" href="https://github.com/remote-android/redroit-doc" target="_blank" rel="noopener"
>比较简单的流程&lt;/a>，对于其他系统则需要手工维护。&lt;/p>
&lt;p>首先去下载当前使用内核版本的源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">apt install linux-source-&lt;span class="k">$(&lt;/span>uname-r&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载完的源码位于&lt;code>/usr/src&lt;/code>，格式是&lt;code>.xz&lt;/code>，进去之后解压源码包并进入解压的文件夹，然后执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">make menuconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在弹出界面的勾选：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">Device Drivers--Android--Android Drivers--Binder Ipc Driver。 &lt;span class="c1">#binder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device Drivers--Android--Android Drivers--Binder filesystem。 &lt;span class="c1">#binder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device Drivers--Android--Staging Drivers--Android--Enable the Anonumous Shared Memory Subsystem &lt;span class="c1">#ashmem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">General Setup--CPU/Task &lt;span class="nb">time&lt;/span> and stats accounting--Pressure stall infomation tracking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>后按&lt;code>save&lt;/code>保存。&lt;/p>
&lt;p>或者进去之后直接选择&lt;code>exit&lt;/code>并选择&lt;code>save config&lt;/code>。目录下会生成一个&lt;code>.config&lt;/code>的文件，编辑该文件在最后添加以下内容:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_ASHMEM&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_ANDROID&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_ANDROID_BINDER_IPC&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_ANDROID_BINDERFS&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_ANDROID_BINDER_DEVICES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;binder,hwbinder,vndbinder,binderfs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_ANDROID_BINDER_IPC_SELFTEST&lt;/span>&lt;span class="o">=&lt;/span>y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存后执行&lt;code>make&lt;/code> ，建议不要加j让他慢慢编译，经尝试这样会导致报错。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：可能会报错：&lt;code>CONFIG_DEBUG_INFO_BTF&lt;/code>&lt;/p>
&lt;p>这种情况就去&lt;code>.config&lt;/code>文件里面添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_DEBUG_INFO_DWARF5&lt;/span>&lt;span class="o">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CONFIG_DEBUG_INFO_BTF&lt;/span>&lt;span class="o">=&lt;/span>n &lt;span class="c1">#原值为y&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>跑完后在目录下执行&lt;code>modules_install&lt;/code>和&lt;code>make install&lt;/code>，执行完成后检查内核是否安装到grub了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">base&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">DevBot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">boot&lt;/span>&lt;span class="c1"># cat /boot/grub/grub.cfg | grep menuentry&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="s2">&amp;#34;${feature_menuentry_id}&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">xy&lt;/span> &lt;span class="p">];&lt;/span> &lt;span class="n">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry_id_option&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry_id_option&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">menuentry_id_option&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-simple-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">submenu&lt;/span> &lt;span class="s1">&amp;#39;Advanced options for Debian GNU/Linux&amp;#39;&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-advanced-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.5.10android&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.5.10android-advanced-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.5.10android (recovery mode)&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.5.10android-recovery-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.5.0-0.deb12.4-amd64&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.5.0-0.deb12.4-amd64-advanced-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.5.0-0.deb12.4-amd64 (recovery mode)&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.5.0-0.deb12.4-amd64-recovery-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.1.0-17-amd64&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.1.0-17-amd64-advanced-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.1.0-17-amd64 (recovery mode)&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.1.0-17-amd64-recovery-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.1.0-15-amd64&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.1.0-15-amd64-advanced-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;Debian GNU/Linux, with Linux 6.1.0-15-amd64 (recovery mode)&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">debian&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">gnu&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="n">os&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-6.1.0-15-amd64-recovery-9aba24c5-ec53-4108-b461-4bcc67d1d0dc&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">menuentry&lt;/span> &lt;span class="s1">&amp;#39;UEFI Firmware Settings&amp;#39;&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;uefi-firmware&amp;#39;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到&lt;code>Debian GNU/Linux, with Linux 6.5.10android&lt;/code>已经配置进去了。&lt;/p>
&lt;p>然后我们需要修改内核启动顺序：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#nano /etc/default/grub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRUB_DEFAULT=&amp;#34;1 &amp;gt;0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRUB_TIMEOUT=5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRUB_CMDLINE_LINUX_DEFAULT=&amp;#34;quiet splash&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRUB_CMDLINE_LINUX=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRUB_DISABLE_OS_PROBER=false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>GRUB_DEFAULT为按menuentry顺序排序设置默认启动项，第一项为0，我这里对应的是&lt;code>Debian GNU/Linux&lt;/code>，&lt;code>Debian GNU/Linux, with Linux 6.5.10android&lt;/code>是子菜单&lt;code>Advanced options for Debian GNU/Linux&lt;/code>下的第一项，所以这里应该设置为1 &amp;gt;0.注意&amp;quot;1&amp;quot;和&amp;quot;&amp;gt;&amp;ldquo;之间有一个空格。&lt;/p>
&lt;p>然后更新保存grub：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">update-grub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看是否配置正确：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cat /proc/cmdline
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启。然后直接一个&lt;code>uname -a&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> tamakyi@DevBot:~$ uname -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Linux AkarinDevBot 6.5.10android &lt;span class="c1">#2 SMP PREEMPT_DYNAMIC Wed Jan 24 00:43:00 HKT 2024 x86_64 GNU/Linux&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果还是不行（提示缺少ashmem）的话，去克隆这个仓库并执行安装加载：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone https://github.com/choff/anbox-modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> anbox-modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sh ./INSTALL.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再检查是否启用完成：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> tamakyi@DevBot:~$ grep binder /proc/filesystems
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nodev binder
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> tamakyi@DevBot:~$ grep ashmem /proc/misc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">124&lt;/span> ashmem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>有输出就表示正常启用模块了。如果如果还是用不了，那可能是你需要手动挂载binderfs：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mkdir /dev/binderfs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mount -t binder none /dev/binderfs/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后重启再验证，至此redroid的内核依赖模块安装完成。&lt;/p>
&lt;hr>
&lt;h3 id="安装redroid">安装redroid
&lt;/h3>&lt;p>安装过docker的直接运行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> root@DevBot:~# docker run -itd --rm --privileged &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --pull always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v ~/data:/data &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -p 35555:5555 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> redroid/redroid:13.0.0-latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中官方支持的版本如下：（截止20240124）&lt;/p>
&lt;ul>
&lt;li>Android 14 (redroid/redroid:14.0.0-latest)&lt;/li>
&lt;li>Android 14 64bit only (redroid/redroid:14.0.0_64only-latest)&lt;/li>
&lt;li>Android 13 (redroid/redroid:13.0.0-latest)&lt;/li>
&lt;li>Android 13 64bit only (redroid/redroid:13.0.0_64only-latest)&lt;/li>
&lt;li>Android 12 (redroid/redroid:12.0.0-latest)&lt;/li>
&lt;li>Android 12 64bit only (redroid/redroid:12.0.0_64only-latest)&lt;/li>
&lt;li>Android 11 (redroid/redroid:11.0.0-latest)&lt;/li>
&lt;li>Android 10 (redroid/redroid:10.0.0-latest)&lt;/li>
&lt;li>Android 9 (redroid/redroid:9.0.0-latest)&lt;/li>
&lt;li>Android 8.1 (redroid/redroid:8.1.0-latest)&lt;/li>
&lt;/ul>
&lt;p>版本并不是越高越好，越高占用内存越多，且限制更多，此处我选择安卓10，跑个shamrock足矣。
&lt;strong>经测试在安卓10内部打开设置会导致宿主机死机，并且重启后docker容器会消失，慎用&lt;/strong>&lt;/p>
&lt;p>检查是否正常使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># docker ps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d51457fc4561 redroid/redroid:10.0.0-latest &lt;span class="s2">&amp;#34;/init androidboot.h…&amp;#34;&lt;/span> &lt;span class="m">3&lt;/span> minutes ago Up &lt;span class="m">3&lt;/span> minutes 0.0.0.0:35555-&amp;gt;5555/tcp, :::35555-&amp;gt;5555/tcp sweet_vaughan
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载adb套件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">wget https://dl.google.com/android/repository/platform-tools_r34.0.5-linux.zip &lt;span class="c1">#不一定是这个版本，具体以官网为准&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">unzip platform-tools_r34.0.5-linux.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp platform-tools_r34.0.5-linux/adb /usr/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x /usr/bin/adb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>连接进redroid：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> root@DevBot:~/platform-tools# adb connect localhost:35555 &lt;span class="c1">#前面把docker的5555端口映射到宿主的35555端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">connected to localhost:35555
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> root@DevBot:~/platform-tools# adb devices
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">List of devices attached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost:35555 device
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>base&lt;span class="o">)&lt;/span> root@DevBot:~/platform-tools# adb -s localhost:35555 shell &lt;span class="c1">#实际上我这里有多个设备连接 所以需要指定设备&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redroid_x86_64:/ $
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redroid_x86_64:/ $ free -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> total used free shared buffers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Mem: 14G 5.3G 8.2G 12M 82M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-/+ buffers/cache: 5.2G 8.2G
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Swap: 976M &lt;span class="m">0&lt;/span> 976M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redroid_x86_64:/ $ df -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">overlay 218G 65G 141G 32% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 64M 592K 63M 1% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shm 64M &lt;span class="m">0&lt;/span> 64M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sdb2 218G 65G 141G 32% /data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 6.7G &lt;span class="m">0&lt;/span> 6.7G 0% /mnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 6.7G &lt;span class="m">0&lt;/span> 6.7G 0% /apex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/fuse 218G 65G 141G 32% /storage/emulated
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redroid_x86_64:/ $ uname -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Linux localhost 6.5.10android &lt;span class="c1">#2 SMP PREEMPT_DYNAMIC Wed Jan 24 00:43:00 HKT 2024 x86_64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redroid_x86_64:/ $
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询下&lt;code>build.prop&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">1&lt;span class="p">|&lt;/span>redroid_x86_64:/ $ su
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1&lt;span class="p">|&lt;/span>redroid_x86_64:/ &lt;span class="c1"># cat /system/build.prop &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># begin common build properties&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># autogenerated by build/make/tools/buildinfo_common.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.date&lt;span class="o">=&lt;/span>Mon Oct &lt;span class="m">16&lt;/span> 08:28:31 UTC &lt;span class="m">2023&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.date.utc&lt;span class="o">=&lt;/span>&lt;span class="m">1697444911&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.fingerprint&lt;span class="o">=&lt;/span>redroid/redroid_x86_64/redroid_x86_64:10/QP1A.190711.019/frank10160828:userdebug/test-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.id&lt;span class="o">=&lt;/span>QP1A.190711.019
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.tags&lt;span class="o">=&lt;/span>test-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.type&lt;span class="o">=&lt;/span>userdebug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.version.incremental&lt;span class="o">=&lt;/span>eng.frank.20231016.082901
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.version.release&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.system.build.version.sdk&lt;span class="o">=&lt;/span>&lt;span class="m">29&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.system.brand&lt;span class="o">=&lt;/span>redroid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.system.device&lt;span class="o">=&lt;/span>redroid_x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.system.manufacturer&lt;span class="o">=&lt;/span>redroid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.system.model&lt;span class="o">=&lt;/span>redroid10_x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.system.name&lt;span class="o">=&lt;/span>redroid_x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># end common build properties&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># begin build properties&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># autogenerated by buildinfo.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.id&lt;span class="o">=&lt;/span>QP1A.190711.019
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.display.id&lt;span class="o">=&lt;/span>redroid_x86_64-userdebug &lt;span class="m">10&lt;/span> QP1A.190711.019 eng.frank.20231016.082901 test-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.incremental&lt;span class="o">=&lt;/span>eng.frank.20231016.082901
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.sdk&lt;span class="o">=&lt;/span>&lt;span class="m">29&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.preview_sdk&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.preview_sdk_fingerprint&lt;span class="o">=&lt;/span>REL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.codename&lt;span class="o">=&lt;/span>REL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.all_codenames&lt;span class="o">=&lt;/span>REL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.release&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.security_patch&lt;span class="o">=&lt;/span>2019-09-05
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.base_os&lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.version.min_supported_target_sdk&lt;span class="o">=&lt;/span>&lt;span class="m">23&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.date&lt;span class="o">=&lt;/span>Mon Oct &lt;span class="m">16&lt;/span> 08:28:31 UTC &lt;span class="m">2023&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.date.utc&lt;span class="o">=&lt;/span>&lt;span class="m">1697444911&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.type&lt;span class="o">=&lt;/span>userdebug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.user&lt;span class="o">=&lt;/span>frank
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.host&lt;span class="o">=&lt;/span>redroid-builder
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.tags&lt;span class="o">=&lt;/span>test-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.flavor&lt;span class="o">=&lt;/span>redroid_x86_64-userdebug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.ab_update&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ro.product.cpu.abi and ro.product.cpu.abi2 are obsolete,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># use ro.product.cpu.abilist instead.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.cpu.abi&lt;span class="o">=&lt;/span>x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.cpu.abilist&lt;span class="o">=&lt;/span>x86_64,x86
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.cpu.abilist32&lt;span class="o">=&lt;/span>x86
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.cpu.abilist64&lt;span class="o">=&lt;/span>x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.product.locale&lt;span class="o">=&lt;/span>en-US
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.wifi.channels&lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ro.build.product is obsolete; use ro.product.device&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.product&lt;span class="o">=&lt;/span>redroid_x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Do not try to parse description or thumbprint&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.build.description&lt;span class="o">=&lt;/span>redroid_x86_64-userdebug &lt;span class="m">10&lt;/span> QP1A.190711.019 eng.frank.20231016.082901 test-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># end build properties&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># from build/make/target/board/gsi_system.prop&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># GSI always generate dex pre-opt in system image&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.cp_system_other_odex&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># GSI always disables adb authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.adb.secure&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># GSI disables non-AOSP nnapi extensions on product partition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.nnapi.extensions.deny_on_product&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TODO(b/120679683): disable RescueParty before all problem apps solved&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">persist.sys.disable_rescue&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TODO(b/78105955): disable privapp_permissions checking before the bug solved&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.control_privapp_permissions&lt;span class="o">=&lt;/span>disable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TODO(b/136212765): the default for LMK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.lmk.kill_heaviest_task&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.lmk.kill_timeout_ms&lt;span class="o">=&lt;/span>&lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.lmk.use_minfree_levels&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># end of build/make/target/board/gsi_system.prop&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ADDITIONAL_BUILD_PROPERTIES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.bionic.ld.warning&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ro.treble.enabled&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">persist.debug.dalvik.vm.core_platform_api_policy&lt;span class="o">=&lt;/span>just-warn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dalvik.vm.lockprof.threshold&lt;span class="o">=&lt;/span>&lt;span class="m">500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.bt.name&lt;span class="o">=&lt;/span>Android
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>说明已经正常安装redroid并使用了。&lt;/p>
&lt;hr>
&lt;h3 id="配置安装shamrock">配置安装shamrock
&lt;/h3>&lt;p>首先要把相关的东西准备好（此步骤我在windows远程操作了）：
下载:
&lt;code>https://github.com/Genymobile/scrcpy/releases/download/v2.3.1/scrcpy-win64-v2.3.1.zip&lt;/code>
&lt;code>https://downv6.qq.com/qqweb/QQ_1/android_apk/Android_9.0.15_64.apk&lt;/code>
&lt;code>https://github.com/LSPosed/LSPatch/releases/download/v0.6/manager-v0.6-398-release.apk&lt;/code>
&lt;code>https://github.com/RikkaApps/Shizuku/releases/download/v13.5.3/shizuku-v13.5.3.r1036.fff3f87-release.apk&lt;/code>
以及Shamrock安装包，因为使用的是Action版本，需要登陆Github下载，此处不放链接
，解压&lt;code>scrcpy-win64-v2.3.1.zip&lt;/code>并把QQ、LSPatch、shizuku、Shamrock放在同一目录，打开powershell，执行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">./adb.exe connect 100.64.0.16:35555 &lt;span class="c1">#100.64.0.16为我的debian宿主机远程访问IP。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./adb.exe devices
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">List of devices attached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">100.64.0.16:35555 device
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./adb push Android_9.0.15_64.apk /sdcard/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./adb install LSPatch.apk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./adb install shizuku-v13.5.3.r1040.1fc3a2d-release.apk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./adb install Shamrock-v1.0.7.r260.64b7b00-all.apk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后使用scrcpy：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">scrcpy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会进到安卓界面，先打开shizuku，会提示要启用，我们回退到adb窗口，执行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">./adb shell sh /storage/emulated/0/Android/data/moe.shizuku.privileged.api/start.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后shizuku提示&lt;code>shizuku is running&lt;/code>。然后把&lt;code>Authorized 0 applications&lt;/code>点开，勾选LSPatch，再打开LSPatch，到Manager&amp;ndash;Apps点击加号，选择New Patch-Select apk(s) from storage 找到QQ安装包，点击start patch
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d331552e6.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d331552e6.png" alt="shizuku" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d331552e6.png"
loading="lazy"
alt="shizuku"
>
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d3ce0b407.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d3ce0b407.png" alt="lsp-patch" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d3ce0b407.png"
loading="lazy"
alt="lsp-patch"
>
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d3edd100b.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d3edd100b.png" alt="start patch" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d3edd100b.png"
loading="lazy"
alt="start patch"
>
等待打补丁完成，然后点击Install。
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d43075df2.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d43075df2.png" alt="patch done" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/24/65b0d43075df2.png"
loading="lazy"
alt="patch done"
>
安装完成后点击LSPatch里的QQ，找到module scope，把Shamrock打勾，即允许Shamrock对QQ生效。
然后启动QQ，QQ就闪退了&amp;hellip;
因为LSPatch目前已停止更新，后续是否会支持新版QQ尚未能明确，此文暂停更新。&lt;/p>
&lt;hr>
&lt;h3 id="参考文章">参考文章
&lt;/h3>&lt;p>&lt;a class="link" href="https://dwcarrot.github.io/blog/2023/12/29/Notes-QQ-Bot-Framework" target="_blank" rel="noopener"
>QQ-bot 框架部署记录&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/518415793" target="_blank" rel="noopener"
>一次云服务器内核升级之旅 - 知乎 (zhihu.com)&lt;/a>&lt;/p></description></item><item><title>Debian12下通过docker安装homeassistant-hacs</title><link>https://blog.tama.guru/record/homeassistant-hacs-debian12.html</link><pubDate>Fri, 25 Aug 2023 11:58:39 +0800</pubDate><guid>https://blog.tama.guru/record/homeassistant-hacs-debian12.html</guid><description>&lt;p>HACS即&lt;code>Home Assistant Community Store&lt;/code>，整合了很多homeassistant的第三方集成，比如说米家的相关设备，如果使用官方自带的集成，一般只能识别出几个传感器，而且无法控制，如果想要把米家的设备完全接入就需要安装HACS下面的Xiaomi Miot Auto这个集成，安装之后效果如图所示，基本上能实现HASS管理全部米家设备的想法。
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2023/08/25/64e820b842fb5.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2023/08/25/64e820b842fb5.png" alt="安装集成之后的页面" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2023/08/25/64e820b842fb5.png"
loading="lazy"
alt="安装集成之后的页面"
>
安装HACS难的地方在于需要homeassistant supervised版本，要么在物理机上安装hassos，要么弄个虚拟机给hass，还有一种方法是在debian系的系统上通过docker实现，因为前面两种方法影响太大，我选择第三个。
需要注意的是最好使用原版debian系统，我现在用的是debian 12.1，正好适合。&lt;/p>
&lt;hr>
&lt;p>####首先肯定是先安装docker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">apt&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">curl&lt;/span> &lt;span class="n">vim&lt;/span> &lt;span class="n">wget&lt;/span> &lt;span class="n">gnupg&lt;/span> &lt;span class="n">dpkg&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">transport&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">https&lt;/span> &lt;span class="n">lsb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">release&lt;/span> &lt;span class="n">ca&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">certificates&lt;/span> &lt;span class="c1">#安装必要组件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">curl&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">sS&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">docker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">linux&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">debian&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">gpg&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">gpg&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">dearmor&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">share&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">keyrings&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">docker&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ce&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gpg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">echo&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-ce.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian $(lsb_release -sc) stable&amp;#34;&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">apt&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sources&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">docker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span> &lt;span class="c1">#添加源和证书&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>####安装OS-AGENT和supervised&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wget&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">1.5&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent_1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">5.1&lt;/span>&lt;span class="n">_linux_x86_64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dpkg&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent_1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">5.1&lt;/span>&lt;span class="n">_linux_x86_64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">wget&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">home&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">assistant&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">supervised&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">installer&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">1.5&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">homeassistant&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">supervised&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dpkg&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">homeassistant&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">supervised&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deb&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装supervised包时可能会报错，需要安装以下依赖包：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">apt install libmicrohttpd12 systemd-journal-remote systemd-resolved libnss-resolve jq
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>supervised包安装好后要重启一次机器，不然有可能会遇到解析&lt;code>checkonline.home-assistant.io&lt;/code>错误的情况。
重启之后在终端里执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker ps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到出现了很多进程。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">~ sudo docker ps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">80d950683f05 ghcr.io/home-assistant/amd64-hassio-multicast:2023.06.2 &amp;#34;/init&amp;#34; 3 hours ago Up 3 hours hassio_multicast
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e2c45b161283 ghcr.io/home-assistant/amd64-hassio-audio:2023.06.0 &amp;#34;/init&amp;#34; 3 hours ago Up 3 hours hassio_audio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">61df701e5ca7 ghcr.io/home-assistant/amd64-hassio-dns:2023.06.2 &amp;#34;/init&amp;#34; 3 hours ago Up 3 hours hassio_dns
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a6d8e3385086 ghcr.io/home-assistant/amd64-hassio-cli:2023.06.0 &amp;#34;/init&amp;#34; 3 hours ago Up 3 hours hassio_cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9c80287b1474 ghcr.io/home-assistant/qemux86-64-homeassistant:2023.8.4 &amp;#34;/init&amp;#34; 3 hours ago Up 36 minutes homeassistant
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f3cb9ef899e ghcr.io/home-assistant/amd64-hassio-observer:2023.06.0 &amp;#34;/usr/bin/observer&amp;#34; 3 hours ago Up 3 hours 0.0.0.0:4357-&amp;gt;80/tcp, :::4357-&amp;gt;80/tcp hassio_observer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e946ecbdc4d ghcr.io/home-assistant/amd64-hassio-supervisor:latest &amp;#34;/init&amp;#34; 3 hours ago Up 3 hours hassio_supervisor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个过程可能需要几分钟，如果可行的话建议还要挂上梯子。几分钟后浏览器访问&lt;code>http://IP:8123&lt;/code>可以到达hass界面，如果访问不了的建议检查防火墙是否放行8123端口。
####安装HACS并配置Xiaomi Miot Auto
安装HACS只需要在终端里执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wget -O - https://get.hacs.xyz | bash -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会自动安装到hass的第三方目录下，安装完成后重启HASS。
然后在HACS下的集成选择浏览并下载存储库，在其中找到Xiaomi Miot Auto，选择安装。
安装完成之后在配置-设备与服务-添加集成-选择Xiaomi Miot Auto，然后输入小米账号ID 密码 服务器选择CN，保存之后所有设备就都出来。&lt;/p></description></item></channel></rss>