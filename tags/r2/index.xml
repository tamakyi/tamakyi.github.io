<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R2 on 狼的公告板 ver.Hugo</title><link>https://blog.tama.guru/tags/r2.html</link><description>Recent content in R2 on 狼的公告板 ver.Hugo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>tamakyi</copyright><lastBuildDate>Fri, 15 Aug 2025 02:00:15 +0000</lastBuildDate><atom:link href="https://blog.tama.guru/tags/r2/index.xml" rel="self" type="application/rss+xml"/><item><title>r2的安全性配置（主要是缓存）</title><link>https://blog.tama.guru/post/r2_waf_rules.html.html</link><pubDate>Tue, 20 Aug 2024 02:36:00 +0800</pubDate><guid>https://blog.tama.guru/post/r2_waf_rules.html.html</guid><description>&lt;p>因为本站使用的R2资源比较少，整个桶不过50M，一个月下来B类访问量也不足4W，之前基本上没考虑过什么盗刷的问题，昨天在文章下面有用户提到他的资源访问量比较大，一天下来就有我的数量级了，这种情况下一不小心可能就有机会给Cloudflare打钱。之前本站大部分资源都是仍在OSS上的，从上个月开始访问速度就非常不正常，试着把东西都扔到R2上整体访问速度居然还提升了&amp;hellip;阿里云的防盗刷配置还是比较简单的，R2就没那么直观，可以从以下几个方面入手：&lt;/p>
&lt;h4 id="缓存">缓存
&lt;/h4>&lt;p>对于资源的缓存配置好可以避免直接访问到桶里的数据，我看了下能配置的入口有两个：
一是在存储桶内的设置项配置&lt;code>CORS策略&lt;/code>，主要是添加&lt;code>&amp;quot;MaxAgeSeconds&amp;quot;: 43200&lt;/code>这一项，在官方文档里的解释是：指定允许浏览器缓存 CORS 预检响应的时间（以秒为单位），最大值是43200，此举可能有一定帮助但不是很确定。
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38c20c94af.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38c20c94af.png" alt="CORS策略" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38c20c94af.png"
loading="lazy"
alt="CORS策略"
>
二是利用Cloudflare的页面规则功能，为R2域名添加缓存设置项：
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38d1e83739.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38d1e83739.png" alt="缓存设置项" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38d1e83739.png"
loading="lazy"
alt="缓存设置项"
>
因为我的资源都放在&lt;code>r2.****.***&lt;/code>下，所以我配置的域名是&lt;code>r2.****.***/*&lt;/code>，缓存基本都拉到最大值，经过测试开启后确实也是从本地读取资源了。
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38dad3b00a.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38dad3b00a.png" alt="资源测试" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38dad3b00a.png"
loading="lazy"
alt="资源测试"
>
另外缓存配置下也有个Cache Rules，不知道和上面有没有冲突，我是一并配置了。&lt;/p>
&lt;h4 id="防盗链可选">防盗链（可选）
&lt;/h4>&lt;p>防盗链一般使用的是安全性下的WAF-自定义功能，配置的规则方式为：字段：&lt;code>引用方 不包含 允许的域名1&lt;/code> Or &lt;code>引用方 不包含 允许的域名2&lt;/code>&amp;hellip; And &lt;code>主机名 包含 r2地址&lt;/code> 时采取 &lt;code>阻止&lt;/code> 的措施，比如我图中的配置：
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38f9d3e332.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38f9d3e332.png" alt="防盗链配置" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c38f9d3e332.png"
loading="lazy"
alt="防盗链配置"
>
这样就是当不包含blog.tama.guru或tama.host的引用方去访问我的r2域名时，进行阻止，此时直接访问桶内资源已经是提示被ban了。这里的https://可以不要。
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/08/20/66c3900eaa9ce.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c3900eaa9ce.png" alt="被阻止了" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/08/20/66c3900eaa9ce.png"
loading="lazy"
alt="被阻止了"
>&lt;/p>
&lt;h4 id="其他事项">其他事项
&lt;/h4>&lt;ul>
&lt;li>启用如图所示的防盗链规则的话有可能会出现配置允许的域名但是也无法访问的情况，因此建议考虑是否开启，我个人觉得有缓存这一级保护就差不多了。&lt;/li>
&lt;li>启动规则之后在安全性-事件下会显示访问信息记录，包括IP 国家/区域 试图访问的链接等。我刚配置好就碰到个笨蛋扫我后台&amp;hellip;难崩&amp;hellip;&lt;/li>
&lt;/ul></description></item><item><title>使用S3 Browser管理Cloudflare R2存储桶</title><link>https://blog.tama.guru/record/s3browser_r2_manager.html</link><pubDate>Sat, 13 Jan 2024 22:53:02 +0800</pubDate><guid>https://blog.tama.guru/record/s3browser_r2_manager.html</guid><description>&lt;p>本来我是要把导航页所有的文件搬到Github上并&lt;strong>试图&lt;/strong>通过jsdelivr加速访问，但是我发现国内移动网络根本无法直连jsdelivr&amp;hellip;在多次反馈网页无法打开之后，最后还是退一步选择迁移到R2上了。但是R2的网页端管理真的是做得一团糟，上传经常半路失败不说，一次还只能上传100个文件，更恶心的是文件夹无法删除，对于我来说是体验真的不好了。&lt;/p>
&lt;p>既然兼容AWS S3，那就用S3的方法去管理他。
需要用到&lt;a class="link" href="https://s3browser.com/download.aspx" target="_blank" rel="noopener"
>S3Browser&lt;/a>这个软件，只有英文，但是不妨碍使用。
安装完成之后选择&lt;code>Add new account&lt;/code>。
&lt;code>Display Name&lt;/code>任意填写即可，&lt;code>Account type&lt;/code>选择&lt;code>S3 Compatible Storage&lt;/code>，即兼容S3存储。&lt;code>REST Endpotin&lt;/code>对应的是&lt;code>S3 API&lt;/code>的值，但是不能整个填写进去。比如网页端显示的&lt;code>S3 API&lt;/code>为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">https://xxxxxxxxxxxxxxxxxxx.r2.cloudflarestorage.com/tamabox
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>那这里要填写的是&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">xxxxxxxxxxxxxxxxxxx.r2.cloudflarestorage.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>AK&lt;/code>和&lt;code>SK&lt;/code>是创建桶的时候提供的，如果忘记了就没救了，重新弄个桶吧。
&lt;code>Encrypt Access Keys with a password&lt;/code>和&lt;code>Use secure transfer(SSL/TSL)&lt;/code>选项保留默认即可。
&lt;div class="post-img-view">
&lt;a data-fancybox="gallery" href="https://r2.337845818.best/oss-to-r2/2024/01/13/65a2a0bdc8b8c.png">
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/13/65a2a0bdc8b8c.png" alt="add account info 1" />
&lt;/a>
&lt;/div>
&lt;img src="https://r2.337845818.best/oss-to-r2/2024/01/13/65a2a0bdc8b8c.png"
loading="lazy"
alt="add account info 1"
>
配置完之后要点开左下角的&lt;code>advanced settings&lt;/code>。
&lt;code>Signature version&lt;/code>选择&lt;code>Signature V4&lt;/code>.
&lt;code>Addressing model&lt;/code>选择&lt;code>Virtual hosted style&lt;/code>.
其他选项保留初始值不用动，点close再save changes&lt;code>即可。 ![add account info 2][3] 这时候应该是能连接进R2内部了，就当作一个文件管理器操作就行了。 ![setting complete][4] &amp;lt;br/&amp;gt; 如果只用来做图床的话可以用&lt;/code>Pic-Go`这个软件，操作方法也类似。&lt;/p></description></item><item><title>在兰空图床配置并使用Cloudflare R2 存储桶</title><link>https://blog.tama.guru/record/r2_on_lskypro.html</link><pubDate>Mon, 08 Jan 2024 16:00:00 +0800</pubDate><guid>https://blog.tama.guru/record/r2_on_lskypro.html</guid><description>&lt;h3 id="什么是r2为什么用r2">什么是R2，为什么用R2
&lt;/h3>&lt;p>R2是由Cloudflare推出的对象存储，接口兼容AWS S3且有免费套餐，套餐内容如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">类别&lt;/th>
&lt;th style="text-align: center">永远免费&lt;/th>
&lt;th style="text-align: center">按月收费&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">存储&lt;/td>
&lt;td style="text-align: center">10GB/月&lt;/td>
&lt;td style="text-align: center">0.015 美元/GB 存储&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">A类操作:状态改变&lt;/td>
&lt;td style="text-align: center">100 万次/月&lt;/td>
&lt;td style="text-align: center">4.50 美元/百万次&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">B类操作:读取状态&lt;/td>
&lt;td style="text-align: center">1000 万次/月&lt;/td>
&lt;td style="text-align: center">0.36 美元/百万次&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>根据文档，各类操作包括：&lt;/p>
&lt;center>A类操作&lt;/center>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">操作名称&lt;/th>
&lt;th style="text-align: center">操作含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">ListBuckets&lt;/td>
&lt;td style="text-align: center">列出的存储桶及其所有者&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">PutBucket&lt;/td>
&lt;td style="text-align: center">创建存储桶&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">ListObjects&lt;/td>
&lt;td style="text-align: center">返回存储桶中的对象&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">PutObject&lt;/td>
&lt;td style="text-align: center">创建对象&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">CopyObject&lt;/td>
&lt;td style="text-align: center">复制对象&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">CompleteMultipartUpload&lt;/td>
&lt;td style="text-align: center">完成分片上传&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">CreateMultipartUpload&lt;/td>
&lt;td style="text-align: center">创建分片上传任务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">ListMultipartUploads&lt;/td>
&lt;td style="text-align: center">列出分片上传（进度）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">UploadPart&lt;/td>
&lt;td style="text-align: center">分片上传&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">UploadPartCopy&lt;/td>
&lt;td style="text-align: center">从一个已存在的Object中拷贝数据来上传一个分片&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">ListParts&lt;/td>
&lt;td style="text-align: center">列出分片&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">PutBucketEncryption&lt;/td>
&lt;td style="text-align: center">存储桶加密&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">PutBucketCors&lt;/td>
&lt;td style="text-align: center">为指定的存储桶设置跨域资源共享CORS规则&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">PutBucketLifecycleConfiguration&lt;/td>
&lt;td style="text-align: center">设置对象生命周期规则&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;center>B类操作&lt;/center>
| 操作名称 | 操作含义 |
|:-------------------------------:|:--------------------------------------------:|
| HeadBucket | 确定是否存在存储桶以及是否有访问权限 |
| HeadObject | 确定是否存在对象以及是否有访问权限 |
| GetObject | 获取（下载）对象 |
| UsageSummary | 使用情况摘要 |
| GetBucketEncryption | 获取（下载）加密存储桶 |
| GetBucketLocation | 获取（下载）加存储桶位置 |
| GetBucketCors | 获取存储桶设置跨域资源共享CORS规则 |
| GetBucketLifecycleConfiguration | 获取对象生命周期规则 |
&lt;center>免费操作&lt;/center>
| 操作名称 | 操作含义 |
|:-------------------------------:|:--------------------------------------------:|
| DeleteObject | 删除对象 |
| DeleteBucket | 删除桶 |
| DeleteMultipartUpload | 中止分片上传 |
也就是说R2只对存储和状态修改产生费用，下载不计费，对于小网站来说足够了。
注意:看一下这篇文章[https://machbbs.com/hostloc/640526][1]，避免被坑美刀。
&lt;h3 id="有什么不足">有什么不足
&lt;/h3>&lt;p>Cloudflare祝您新的一年红红火火。&lt;/p>
&lt;h3 id="如何接入">如何接入
&lt;/h3>&lt;h4 id="cloudflare网页端配置">Cloudflare网页端配置
&lt;/h4>&lt;p>配置之前需要把一个域名接入Cloudflare并设置好解析。比如我的域名&lt;code>i-tama.website&lt;/code>分配一个二级域名&lt;code>r2.i-tama.website&lt;/code>用于自定义访问域名，解析内容任意即可，因为后面接入的时候会自动修改成CNAME接入。&lt;/p>
&lt;p>首先进入Cloudflare仪表盘的R2，点击创建存储桶：&lt;/p>
&lt;p>&lt;code>存储桶名称&lt;/code>：填写3-63个不含特殊字符，比如我使用的&lt;code>tamabox&lt;/code>。&lt;/p>
&lt;p>位置：选择自动，提供位置提示默认是无的情况下会根据位置自动选择，如果是针对中国的网站那最好是修改为亚太地区(APAC)。（注：记住这个APAC，后面会用到）&lt;/p>
&lt;p>然后点击创建，创建完成之后进入设置，设置界面有几个需要注意的地方：&lt;/p>
&lt;p>名称和S3 API：这两个后面连接需要用得到，可以保存下来。&lt;/p>
&lt;p>自定义域：这里就是配置自定义域名的位置，点击&lt;code>连接域&lt;/code>，填写需要自定义访问的域名（不加https），例如&lt;code>r2.i-tama.website&lt;/code>，并继续，然后会提示现有DNS记录将变更成CNAME解析，点击连接域之后等待初始化完成，约1-2分钟即可。成功后该域的状态应为&lt;code>有效&lt;/code>，且访问存储桶为&lt;code>已允许&lt;/code>。&lt;/p>
&lt;p>R2.dev子域：这里配置允许会生成一个&lt;code>r2.dev&lt;/code>结尾的二级域名用于公共访问，使用这个方式访问可能会有速度限制，但我没尝试过。配置也很简单，点击允许之后输入&lt;code>allow&lt;/code>即可。&lt;/p>
&lt;p>CORS策略：实际使用时可能会碰到跨域错误在这里配置即可，此处不做修改。&lt;/p>
&lt;p>以上配置完成后回退到R2仪表盘，进入账户详细信息下的管理R2 API令牌并选择创建API令牌：&lt;/p>
&lt;p>令牌名称：任意填写 记得就行。&lt;/p>
&lt;p>权限：因为我们是用来做图床的，涉及到文件读写，建议直接配置成管理员读和写。&lt;/p>
&lt;p>指定存储桶：建议一个桶一个API，所以我选择仅应用于特定存储桶，并选择刚才创建的桶。&lt;/p>
&lt;p>TTL:永久。&lt;/p>
&lt;p>客户端IP地址筛选：留空即可。&lt;/p>
&lt;p>最后创建API令牌，此时会得到令牌值、访问秘钥ID和机密访问密钥三个值，需要妥善保存好，因为确认之后就不会再出现这些数据了。&lt;/p>
&lt;p>至此，Cloudflare网页端配置完成。&lt;/p>
&lt;h4 id="图床端配置">图床端配置
&lt;/h4>&lt;p>登录管理员账号进入系统设置 &amp;gt; 存储策略，选择新建一个存储策略。&lt;/p>
&lt;p>角色组根据自己的选择去配置即可。&lt;/p>
&lt;p>名称和简介自行设置好即可。&lt;/p>
&lt;p>存储策略选择AWS S3。&lt;/p>
&lt;p>访问域名填写在Cloudflare设置的自定义域，比如我的是&lt;code>https://r2.i-tama.website/tamabox&lt;/code>。&lt;/p>
&lt;p>&lt;strong>注意，这里的格式是自定义域名+桶名称，如果只填写域名，后面上传的时候会发现我们上传的图片a.png会被上传到&lt;code>https://r2.i-tama.website/tamabox/%year%/%month%/%day%/a.png&lt;/code>，但图床中显示的链接是&lt;code>https://r2.i-tama.website/%year%/%month%/%day%/a.png&lt;/code>，结果就是404了。&lt;/strong>&lt;/p>
&lt;p>AccessKeyId和SecretAccessKey即前面提到的访问秘钥ID以及机密访问秘钥。&lt;/p>
&lt;p>连接地址填写S3 API。&lt;/p>
&lt;p>区域就是前面我们配置位置信息的简码，如果我们选择亚太这里就是填apac。&lt;/p>
&lt;p>储存桶名称即桶名称。&lt;/p>
&lt;p>是否使用路径样式&lt;strong>不要勾选&lt;/strong>，因为勾选之后上传到R2会再多一层路径。比如原来上传的位置是&lt;code>https://r2.i-tama.website/tamabox/%year%/%month%/%day%/a.png&lt;/code>，勾选之后就变成&lt;code>https://r2.i-tama.website/tamabox/tamabox/%year%/%month%/%day%/a.png&lt;/code>了。&lt;/p>
&lt;p>是否在文件上设置公开ACL，这里打开，保存之后随意上传个文件测试是否能上传成功，一般按这个步骤是不会有问题的。&lt;/p>
&lt;h3 id="体验如何">体验如何
&lt;/h3>&lt;p>我没开代理的情况下上传大概是200-300kb/s，下载差不多也是这个速度，只能说基本够用。&lt;/p></description></item></channel></rss>